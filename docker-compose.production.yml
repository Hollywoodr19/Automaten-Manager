services:
  app:
    build: .
    container_name: automaten_app
    restart: always
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD:-SecurePassword123}@postgres:5432/automaten
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
    volumes:
      - ./app:/app/app
      - ./config:/app/config
      - ./scripts:/app/scripts
      - ./run.py:/app/run.py
      - app_uploads:/app/uploads
      - app_backups:/app/backups
    depends_on:
      - postgres
      - redis
    networks:
      - automaten_network

  postgres:
    image: postgres:15-alpine
    container_name: automaten_postgres
    restart: always
    environment:
      - POSTGRES_DB=automaten
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-SecurePassword123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups/postgres:/backups
    networks:
      - automaten_network

  redis:
    image: redis:7-alpine
    container_name: automaten_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - automaten_network

  # Optional: Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: automaten_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - automaten_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_backups:
    driver: local
  nginx_logs:
    driver: local

networks:
  automaten_network:
    driver: bridge
