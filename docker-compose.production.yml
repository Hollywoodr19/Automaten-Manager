services:
  app:
    build: .
    container_name: automaten_app
    restart: always
    ports:
      - "8585:5000"
    environment:
      - FLASK_ENV=production
      - DB_PASSWORD=password123
      - DB_HOST=postgres
      - DB_PORT=5433
      - DB_NAME=automaten
      - DB_USER=postgres
      - SECRET_KEY=7f4a8d9b2c6e11a5f73d8b4e7c2a9f5b8d64e3c7a1f9d4b8e2c6a5f3d1b7e9c4a2f
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./app:/app/app
      - ./run.py:/app/run.py
    depends_on:
      - postgres
      - redis
    networks:
      - automaten_network

  postgres:
    image: postgres:15-alpine
    container_name: automaten_postgres
    restart: always
    environment:
      - POSTGRES_DB=automaten
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password123
    ports:
      - "5433"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups/postgres:/backups
    networks:
      - automaten_network

  redis:
    image: redis:7-alpine
    container_name: automaten_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - automaten_network


volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_backups:
    driver: local


networks:
  automaten_network:
    driver: bridge
